/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 7);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/createPrelevement.js":
/*!*******************************************!*\
  !*** ./resources/js/createPrelevement.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("$(function () {\n  // Fonction destinée à gérer les types de prélèvements: collectifs (et donc sans lecture d'un troupeau ni écriture)\n  // ou individuel (ce qui implique de lire la liste des animaux du troupeau et d'écrire les nouveaux animaux).\n  // la variable i désigne le numéro du prélèvement\n  $(\".indiv\").attr('checked', 'checked');\n  $(\".nom_melange\").attr('required', false);\n  console.log();\n  liste_animals(1); // On active la fenêtre modale\n  // AU changement de choix prelevt individ ou mélange, on réajuste les champs\n\n  $(\".typeprelevement\").on('change', function () {\n    // On récupère le type: indiv ou coll\n    var type = $(this).attr('id').split('_')[0]; // On récupère le numéro du prélèvement\n\n    var i = $(this).attr('id').split('_')[1]; // Si le choix est individuel\n\n    if (type == 'indiv') {\n      // On récupère la liste des animaux\n      liste_animals(i);\n      $(\"#ligne_indiv_\" + i).show();\n      $(\"#ligne_melange_\" + i).hide();\n      $(\"#nom_melange_\" + i).val('');\n      $(\"#nom_melange_\" + i).attr('required', false);\n      $(\"#numero_animal_\" + i).attr('required', true); // Si c'est du type prélèvement simple\n    } else if (type == 'coll') {\n      liste_melanges(i);\n      $(\"#ligne_melange_\" + i).show();\n      $(\"#ligne_indiv_\" + i).hide();\n      $(\"#numero_animal_\" + i).val('');\n      $(\"#nom_animal_\" + i).val('');\n      $(\"#numero_animal_\" + i).attr('required', false);\n      $(\"#nom_melange_\" + i).attr('required', true); // sinon c'est d'un type prélèvement avec des animaux identifiés\n    } else {\n      document.cookie = 'demande = 61'; // ouverture d'une fenetre modale\n\n      $('#melange_avec_animaux').modal();\n    }\n  }); // Ecouteur destiné à transférrer le nom de la case num à la case nom\n\n  $('.numero_animal').on('change', function () {\n    // On explose la saisie num + nom\n    var nom = $(this).val().split('-')[1]; // S'il y a un nom (cas où l'identité de l'animal n'est pas limitée à un numéro)\n\n    if (nom != undefined) {\n      // On récupère le num de prélèvement\n      var i = $(this).attr('id').split('_')[2]; // On récupère le numéro de l'animal\n\n      var num = $(this).val().split('-')[0]; // On met le nom dans la champs nom\n\n      $(\"#nom_animal_\" + i).val(nom); // Et on met le numéro dans la case numéro\n\n      $(\"#numero_animal_\" + i).val(num);\n    }\n  }); // Vide le num de l'animal quand on clique sur la croix\n\n  $(\".vide_numero_animal\").on('click', function () {\n    var i = $(this).attr('id').split('_')[3];\n    $(\"#numero_animal_\" + i).val(\"\");\n    $(\"#nom_animal_\" + i).val(\"\");\n  }); // Fonction de base qui est lancée quand on a un prélèvement individuel et qui récupère la liste des animaux\n\n  function liste_animals(i) {\n    var troupeau_id = $(\"#troupeau\").attr('num');\n    var demande_id = $('input[name=demande_id]').attr('value');\n    $('.animal_num').empty();\n    $('#numero_animal_' + i).attr(\"required\", true).focus();\n    var url_actuelle = window.location.protocol + \"//\" + window.location.host + window.location.pathname; // récupère l'adresse de la page actuelle\n\n    var anc = 'laboratoire/prelevement/create/' + demande_id;\n    var nouv = 'api/animal/' + troupeau_id;\n    var url = url_actuelle.replace(anc, nouv);\n    $.get({\n      url: url\n    }).done(function (datas) {\n      var animals = JSON.parse(datas);\n      var liste_animals = '';\n      $.each(animals, function (key, animal) {\n        if (animal.nom == null) {\n          liste_animals += '<option value=\"' + animal.numero + '\">' + animal.numero;\n          '</option>';\n        } else {\n          liste_animals += '<option value=\"' + animal.numero + '-' + animal.nom + '\">' + animal.numero + ' - ' + animal.nom;\n          '</option>';\n        }\n      });\n      $(\".animal_num\").append(liste_animals);\n    });\n  }\n\n  function liste_melanges(i) {\n    var troupeau_id = $(\"#troupeau\").attr('num');\n    var demande_id = $('input[name=demande_id]').attr('value');\n    $(\".liste_melanges\").empty();\n    var url_actuelle = window.location.protocol + \"//\" + window.location.host + window.location.pathname; // récupère l'adresse de la page actuelle\n\n    var anc = 'laboratoire/prelevement/create/' + demande_id;\n    var nouv = 'api/melanges/' + troupeau_id;\n    var url = url_actuelle.replace(anc, nouv);\n    $.get({\n      url: url\n    }).done(function (datas) {\n      var melanges = JSON.parse(datas);\n      var liste_melanges = '';\n      $.each(melanges, function (key, melange) {\n        liste_melanges += '<option value=\"' + melange.nom + '\">' + melange.nom + '</option>';\n      });\n      $(\".liste_melanges\").append(liste_melanges);\n    });\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/createPrelevement.js\n");

/***/ }),

/***/ 7:
/*!**********************************************!*\
  !*** multi ./resources/js/createPrelevement ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /srv/parasitlab/resources/js/createPrelevement */"./resources/js/createPrelevement.js");


/***/ })

/******/ });